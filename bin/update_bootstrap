#!/bin/sh

if [ `uname` == 'Darwin' ] ;
then
	SCRIPT=$(greadlink -f "$0") || exit 1
else
	SCRIPT=$(readlink -f "$0")  || exit 1
fi

DOWNLOADER=$(dirname "$SCRIPT")"/download_customized_bootstrap" || exit 1
DANCER_BASE_DIR=$(dirname $(dirname "$SCRIPT")) || exit 1
DANCER_PUBLIC="$DANCER_BASE_DIR/public"

[ -x "$DOWNLOADER" ] || { echo "Error: can't find bootstrap downloader script ($DOWNLOADER)" >&2 ; exit 1 ; }

## Some sanity checks, make sure we're in a dancer directory
if ! [ -e "$DANCER_BASE_DIR/config.yml" ]  ;
then
	echo "Error: directory '$DANCER_BASE_DIR' doesn't look like a Dancer directory (can't find 'config.yml' file." >&2
	exit 1
fi

if ! [ -d "$DANCER_PUBLIC" ] ;
then
	echo "Error: can't find Dancer's 'public' directory in '$DANCER_PUBLIC'" >&2
	exit 1
fi


cd "$DANCER_PUBLIC" || exit 1

## Move aside the old "bootstrap" directory
if [ -d "bootstrap" ]; then
	echo "Moving aside old bootstrap directory..."
	mv "bootstrap" "bootstrap.$(date +%F).old" || exit 1
fi

## delete the old bootstrap zipball, if exists
rm -f "bootstrap.zip"

## Download the latest bootstrap
echo "Downloading latest bootstrap..."
"$DOWNLOADER" > bootstrap.zip || exit 1
echo "Unzipping..."
mkdir -p "bootstrap" || exit 1
cd "bootstrap" || exit 1
unzip -q ../bootstrap.zip || exit 1
cd .. || exit 1

#delete the zipball
rm bootstrap.zip || exit 1

echo "Done - bootstrap is updated."
